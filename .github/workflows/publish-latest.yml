name: Publish latest release

on:
  push:
    branches:
      - main

jobs:
  build:
    uses: ./.github/workflows/build.yml

  pack:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist/

      - name: Install Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 16

      - name: Install npm crx
        run: npm install -g crx

      - name: Create Extension
        run: crx pack dist/

      - name: Publish Extension
        uses: actions/upload-artifact@v2
        with:
          name: synco
          path: ./synco.crx

  relsease:
    needs: pack
    runs-on: ubuntu-latest

    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v2
        with:
          name: synco

      - name: Delete old latest release
        run: |
          RELEASE_ID=$(curl --silent "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/tags/latest" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" | jq '.id')
          if [ "$RELEASE_ID" != "null" ]; then
            curl -X DELETE "https://api.github.com/repos/$GITHUB_REPOSITORY/releases/$RELEASE_ID" \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}"
          fi

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          release_name: latest
          draft: false
          prerelease: true

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./synco.crx
          asset_name: synco.crx
          asset_content_type: application/x-chrome-extension
